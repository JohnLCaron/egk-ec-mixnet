package org.cryptobiotic.verificabitur.vmn

import electionguard.core.Base16.fromHex
import electionguard.core.productionGroup
import org.cryptobiotic.verificabitur.reader.convertP
import org.cryptobiotic.verificabitur.reader.convertQ
import org.junit.jupiter.api.Test

class VerifierSanityTest {
    val group = productionGroup()

    // TEST VECTOR
    //PoS.Cp - PoS. Commitment components.
    //f7ce39ac176dbbea9b9223d00f0169cd34be47f5d4e56dc94cb12bdea0c6a3856fa32d45396e4f11443416279e84df879184fbed6516d746166fe30228abf19f50d4678a1ce4d02d4da0265c6224aca18e1d414e5e179d94dfc144112a9ea4125317cc6ec9287d7428923211c61e7d60ba8fa768de88c227a599bca292968c07fd94746fa8f334689e8aa723bbcb9c7b95bc6d0e5416c391618d1d7bfc135dfd9e234035e88fcd593189354506a1acc94f6c0f6182e4012206b80165d096afd8ccdb4d6fccc8550ec1ceb272a9ff75ef383f09e04899c9906e886c0ed0a49369c04696815edecf76a9ac7f2477258b5c10e26a0209a74e391b5d432e721cbcd7438e95acfe02c926d8b5caced2135489f18cc50adc9be29d773019f69293663be149ded0d3a4818602043ab756b3b7c381ef40ad7ea76e7106c9d607b2af9658432bc4f21d321b0c15934057414f4e2df58db76210c81ff329b625d8b5e0407d46885b3d42ebf3922c88dfa2ca67a571a5eef52b49a30d224b6788c5ad035e1837965f94619be120709598a19c06b54160eb70c92d374e0becff099c53efe152b63acbbe2f081b8d3995f09efd5e0acc5d5cd590784d214fbbee661b4ada4754ddc9ddd2ed64560cb82930b881c815eb0dd92901bbff456672143b34d95222d12e07ac87bad014e1b59a30303a22fea1cf4734a1587ccbed868ca9b96d14d41a
    //
    //TEST VECTOR
    //PoS.v - PoS. Integer challenge in hexadecimal notation.
    //5d4aa7d734dfbed7d8dc2890a7240dd19e64216a28a85de335d8e598fa33dd4d
    //
    //TEST VECTOR
    //PoS.C - PoS. Derived intermediate values.
    //31992f9f394025ecbc954404f4c3d86200512b140dce39e2b833c7507127edb04db12b2e3d9a0fed33504f5afdc4ae822ef4723d148e9af37b6c325f33776766ed3da1927b7e62a8ca28e1d9a348eeaeb5b70134233cc1fad8b9b6d0173f1c31df83f50c8ae96056b2742b015fba66de3e2f0c7072ce6efc97231f6aaf0d2c15d04595bdbbba0ca085dbadb5a761b564a906d456d6f10c40a0f65d0639d26ca218d32253f7d932596ac1defc221646782badf790b4771d269702d88a3478ebf5825177d59863dd9d1eafeab9caf8770fce03e19d12abb8aebc6636f695217fdb2498064c32e4ee8a3662ebce9489985f33888c44c27ddd75a697675f099a7ac2500c41daa2a73fa1b2d1dccd45d5b9c3a72e5e590e0d32e0911838d2c500744ae46b696593f63807cbe425bfc06a285dc7d356c16d73fb35f5730d83b9308b3606a1b57bf1f0d88ac824656473eb2596ff3061bf4ae37773d7871991bb0160efff9e5d58ce2f0bef05c4a06a08bc2c71c2a3e19196db4e3802277816231f39bec3a0accfb5df7c3ef13de4aae0d694a463c703be30ccbf3fc47b6e34a22e1eee27411375d6b66003ae3f92b1570d3bb8f0b619a6feb602d899a8c63f9e64b2e5d096b00cc14cd33789bf4860080e95d14f66c24eddfa76f385115c7b48f9953a49be3b9b915cc5c4b4dba0e73ad04c8080b79ba6811d30941c836a7dbb33c79d
    //
    //TEST VECTOR
    //PoS.k_C - PoS. Reply components.
    //51f43b81024b78871bab1f71ad4ca0057a1742ce4d849882f9b3cf8c6cadb33d

    @Test
    fun sanityC() {
        val Cphex = "f7ce39ac176dbbea9b9223d00f0169cd34be47f5d4e56dc94cb12bdea0c6a3856fa32d45396e4f11443416279e84df879184fbed6516d746166fe30228abf19f50d4678a1ce4d02d4da0265c6224aca18e1d414e5e179d94dfc144112a9ea4125317cc6ec9287d7428923211c61e7d60ba8fa768de88c227a599bca292968c07fd94746fa8f334689e8aa723bbcb9c7b95bc6d0e5416c391618d1d7bfc135dfd9e234035e88fcd593189354506a1acc94f6c0f6182e4012206b80165d096afd8ccdb4d6fccc8550ec1ceb272a9ff75ef383f09e04899c9906e886c0ed0a49369c04696815edecf76a9ac7f2477258b5c10e26a0209a74e391b5d432e721cbcd7438e95acfe02c926d8b5caced2135489f18cc50adc9be29d773019f69293663be149ded0d3a4818602043ab756b3b7c381ef40ad7ea76e7106c9d607b2af9658432bc4f21d321b0c15934057414f4e2df58db76210c81ff329b625d8b5e0407d46885b3d42ebf3922c88dfa2ca67a571a5eef52b49a30d224b6788c5ad035e1837965f94619be120709598a19c06b54160eb70c92d374e0becff099c53efe152b63acbbe2f081b8d3995f09efd5e0acc5d5cd590784d214fbbee661b4ada4754ddc9ddd2ed64560cb82930b881c815eb0dd92901bbff456672143b34d95222d12e07ac87bad014e1b59a30303a22fea1cf4734a1587ccbed868ca9b96d14d41a"
        val Cp = convertP(group, Cphex.fromHex()!!)
        val Chex  = "31992f9f394025ecbc954404f4c3d86200512b140dce39e2b833c7507127edb04db12b2e3d9a0fed33504f5afdc4ae822ef4723d148e9af37b6c325f33776766ed3da1927b7e62a8ca28e1d9a348eeaeb5b70134233cc1fad8b9b6d0173f1c31df83f50c8ae96056b2742b015fba66de3e2f0c7072ce6efc97231f6aaf0d2c15d04595bdbbba0ca085dbadb5a761b564a906d456d6f10c40a0f65d0639d26ca218d32253f7d932596ac1defc221646782badf790b4771d269702d88a3478ebf5825177d59863dd9d1eafeab9caf8770fce03e19d12abb8aebc6636f695217fdb2498064c32e4ee8a3662ebce9489985f33888c44c27ddd75a697675f099a7ac2500c41daa2a73fa1b2d1dccd45d5b9c3a72e5e590e0d32e0911838d2c500744ae46b696593f63807cbe425bfc06a285dc7d356c16d73fb35f5730d83b9308b3606a1b57bf1f0d88ac824656473eb2596ff3061bf4ae37773d7871991bb0160efff9e5d58ce2f0bef05c4a06a08bc2c71c2a3e19196db4e3802277816231f39bec3a0accfb5df7c3ef13de4aae0d694a463c703be30ccbf3fc47b6e34a22e1eee27411375d6b66003ae3f92b1570d3bb8f0b619a6feb602d899a8c63f9e64b2e5d096b00cc14cd33789bf4860080e95d14f66c24eddfa76f385115c7b48f9953a49be3b9b915cc5c4b4dba0e73ad04c8080b79ba6811d30941c836a7dbb33c79d"
        val C = convertP(group, Chex.fromHex()!!)

        val vhex = "5d4aa7d734dfbed7d8dc2890a7240dd19e64216a28a85de335d8e598fa33dd4d"
        val v = convertQ(group, vhex.fromHex()!!)
        val kChex = "51f43b81024b78871bab1f71ad4ca0057a1742ce4d849882f9b3cf8c6cadb33d"
        val kC = convertQ(group, kChex.fromHex()!!)

        // C^v * Cp = g^kC
        val left = (C powP v) * Cp
        val right = group.gPowP(kC)
        println("left == right ${left == right}")
    }

}

// v = 5D4AA7D734DFBED7D8DC2890A7240DD19E64216A28A85DE335D8E598FA33DD4D
//Cp = F7CE39AC176DBBEA9B9223D00F0169CD34BE47F5D4E56DC94CB12BDEA0C6A3856FA32D45396E4F11443416279E84DF879184FBED6516D746166FE30228ABF19F50D4678A1CE4D02D4DA0265C6224ACA18E1D414E5E179D94DFC144112A9EA4125317CC6EC9287D7428923211C61E7D60BA8FA768DE88C227A599BCA292968C07FD94746FA8F334689E8AA723BBCB9C7B95BC6D0E5416C391618D1D7BFC135DFD9E234035E88FCD593189354506A1ACC94F6C0F6182E4012206B80165D096AFD8CCDB4D6FCCC8550EC1CEB272A9FF75EF383F09E04899C9906E886C0ED0A49369C04696815EDECF76A9AC7F2477258B5C10E26A0209A74E391B5D432E721CBCD7438E95ACFE02C926D8B5CACED2135489F18CC50ADC9BE29D773019F69293663BE149DED0D3A4818602043AB756B3B7C381EF40AD7EA76E7106C9D607B2AF9658432BC4F21D321B0C15934057414F4E2DF58DB76210C81FF329B625D8B5E0407D46885B3D42EBF3922C88DFA2CA67A571A5EEF52B49A30D224B6788C5AD035E1837965F94619BE120709598A19C06B54160EB70C92D374E0BECFF099C53EFE152B63ACBBE2F081B8D3995F09EFD5E0ACC5D5CD590784D214FBBEE661B4ADA4754DDC9DDD2ED64560CB82930B881C815EB0DD92901BBFF456672143B34D95222D12E07AC87BAD014E1B59A30303A22FEA1CF4734A1587CCBED868CA9B96D14D41A
//kC = 51F43B81024B78871BAB1F71AD4CA0057A1742CE4D849882F9B3CF8C6CADB33D
// ******* C = 6CBB660447BB6BDB36EE0F8EF0F9FAF2C84F2552080EBF9470BD0D304DA200963A4A1CD74F791E84C98A4FF31EE8B7D7E554E10991F5599A0E8961B03FE87A9DD67CE8C447F196ECC3D55A84AE5CF3429BFB9E63C5D52D6A4CC1308A296D6550DA6882DF5178543F2DD9630613C83674BF8A6D46FC36BFD1A26888DD2E2F7E8843DCBAC2B9C29C3BD5C2E12FF0C110F68C56C34E41155FC3C2C68F117D2E76DB4ED73734C21BAFC41E627231D5F712B0B37A73740C15BCFB9B7E6C8F7725C15CAF376517CB0196E86F2605D2974FD69144F18711BE36842A5E8E499E3B5107028D960F5720C5270B7703D579E6A833029FC37C0A16C7C17E74698AB8BE7C0315D76DE53A7E6604FE39D1465A11DB91CA884774275F73263278B5514204B951B135203DB703B572AB7F4A548587AC57599FA2CCE281FCA471EAC57A12FE0524FBAF4B79C01088D20F1B169A1AEA8719990867C4F158C1B6922938BD8593F9284F4BAE1A6BAE1502D61EE887A6AACCDE010C63F57919279BA5C5591F811912C2C418F17101E3ADD5ECEB895ABC19282639A89B1FA6F5BF36E1EB939097B6A72960E814D2D98FE27E0F1BCFF78B74526FCCB81630E84AD7D257C55769C2B779312D69F72F337B5A5A7942629A28655C54EAFBC2B2E538E6734B4A239F2623278C986B73CF2A93915BBE09B29A1025D26BC8C004465E402BF7717B5B1E0255C93AD6
